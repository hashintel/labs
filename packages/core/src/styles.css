/* See theme.js for HASH theme colors. */
@import "./styles/fonts.css";
@import "./styles/splitter.css";
@import "react-tabs/style/react-tabs.css";

.splitter-layout .layout-pane.layout-pane-primary {
  /**
   * This is a fix for a bug in Safari when height 100% doesn't work in children
   * of flex items.
   *
   * @see https://github.com/philipwalton/flexbugs/issues/197
   */
  flex-basis: 0 !important;
}

/**
  @todo move all of these colours into theme
 */
:root {
  /* Some mappings of the theme colors to structured meaning: */
  --grey: #2a2b2c;
  --background-grey: #3a3a3a;

  /**
   * @deprecated
   * @use var(--theme-dark-hover)
   */
  --selected-background-color: var(--theme-dark-hover);
  --unselected-background-color: #171b1f;

  /* Structural Globals: */
  --header-height: 120px;
  --simulation-controls-height: 62px;
  --tab-bar-height: 32px;
  --icon-size: 18px;
  --modal-border-radius: 16px;
  --item-border-radius: 16px;
  --button-border-radius: 6px;

  /* Our font */
  --font: "Inter", Helvetica, Arial, sans-serif;
  --code-font: Menlo, Monaco, Consolas, "Ubuntu Mono", "Liberation Mono",
    "DejaVu Sans Mono", "Courier New", monospace;
  /**
   * Different to code-font â€“ use this when you want the monospace font to be
   * more consistent cross platform
   */
  --mono-font: "Apercu Mono", var(--code-font);

  --theme-min-width: 1024px;
  --modal-container-z: 303;
  --modal-z: 305;
  --popover-z: 51;
  --popover-shadow: 0 0 10px #000000;
  --popover-border-radius: 7px;
  --modal-border: 1px solid var(--theme-modal-border);
  --input-border: 1px solid var(--theme-input-border);

  --discord-button-y-offset: 10px;
  --discord-button-size: 48px;

  --disabled-input-opacity: 0.66;
}

:root.embed {
  --theme-min-width: 0;
}

@media (max-width: 450px) and (max-height: 350px) {
  .embed .splitter-layout-vertical > .layout-pane-primary {
    display: none;
  }

  .embed .splitter-layout-vertical > .layout-pane {
    height: 100% !important;
    max-height: 100% !important;
  }
}

/* Globals */
body {
  font-family: var(--font);
  margin: 0;
  background-color: var(--theme-black);
  color: var(--theme-white);
}

button,
input,
textarea,
select:not(.Select__select) {
  font-family: var(--font);
  border-color: var(--theme-grey);
  background-color: var(--theme-dark);
  color: var(--theme-white);
}

pre {
  color: var(--theme-white);
  font-size: 0.75rem;
}

button:hover {
  cursor: pointer;
}

button:focus,
input:focus,
textarea:focus,
select:focus {
  outline: 0;
}

::placeholder {
  color: var(--theme-white);
  font-style: italic;
}

input {
  /**
   * this might need to be made **less** general at some point?
   * @see: https://github.com/hashintel/internal/commit/011c68aa20caaf37fb87d159afe84c285482b198#diff-1e70b4bc74c38895f460ad1860d948fcL144
   */
  border: 0;
}

a {
  color: var(--theme-white);
}

html,
body,
#root {
  height: 100%;
  overscroll-behavior: none;
}

.icon-button {
  display: flex;
  justify-content: center;
}

.icon-button span {
  margin-right: 3px;
}

.simulation-control-container button.purple {
  background-color: var(--theme-purple);
  font-weight: 600;
  text-transform: uppercase;
}

.simulation-control-container button.yellow {
  background-color: var(--theme-yellow);
  font-weight: 600;
  text-transform: uppercase;
}

.simulation-control-container button.purple:hover {
  background-color: var(--theme-purple-hover);
}

.simulation-control-container button.yellow:hover {
  background-color: var(--theme-yellow-hover);
}

/* Global Utils */
button.text-only-button {
  border: none;
  background-color: inherit;
  text-decoration: underline;
}

.borderless {
  border: none;
  padding: 0.1em;
}

/* Hash App */
.two-column {
  height: calc(100vh - var(--header-height)) !important;
}

.right-margin {
  margin-right: 1em;
}

.clear-fix {
  clear: both;
}

/* Header */
header .simulation-control-container .form-fields {
  padding: 0.75rem;
}

header .form-fields h4 {
  font-size: 1.5rem;
  flex: 0 0 auto;
}

header .simulation-control-container .form-fields input {
  height: fit-content;
  font-size: 1.5rem;
  margin: 0;
  width: 40%;
  padding: 0.25rem;
  margin-left: 0.5rem;
  flex: 1 1 auto;
}

header .simulation-control-container .form-fields textarea {
  font-size: 1rem;
  width: calc(100% - 1rem);
  padding: 0.5rem;
  min-height: 3rem;
  height: unset;
  resize: vertical;
  transition: max-height 0.3s;
}

header .simulation-control-container .form-fields textarea.expanded {
  max-height: 20rem;
  transition: max-height 0.3s;
}

header .simulation-control-container .form-fields {
  position: relative;
  max-width: 500px;
}

header .simulation-control-container .form-fields > div {
  display: flex;
  align-items: center;
  margin-bottom: 0.75rem;
}

:not(.no-themed-scrollbar)::-webkit-scrollbar {
  background: transparent;
  width: 3px;
  height: 3px;
}

:not(.no-themed-scrollbar)::-webkit-scrollbar-corner {
  background-color: transparent;
}

:not(.no-themed-scrollbar)::-webkit-scrollbar-thumb {
  background: #aaa;
}

/* Tabbed Editor */
.react-tabs {
  flex: 1 1 100%;
  display: flex;
  flex-direction: column;
  align-self: stretch;
  min-width: 0;
}

.react-tabs__tab-list {
  border-bottom: none;
  margin-bottom: 0;
  background-color: var(--theme-darkest);
  overflow-x: auto;
  overflow-x: overlay;

  scrollbar-color: #aaa #1c1e1f;
  scrollbar-width: thin;

  display: flex;
  flex-shrink: 0;
}

.react-tabs__tab-list::-webkit-scrollbar {
  height: 3px;
}

.react-tabs__tab-list::-webkit-scrollbar-thumb {
  background-color: rgba(255, 255, 255, 0.3);
  background-clip: padding-box;
  border-radius: 5px;
}

.react-tabs__tab {
  --tab-color: rgba(255, 255, 255, 0.6);
  color: var(--tab-color);
  background-color: var(--theme-darkest);

  border: none;
  border-radius: 0;

  bottom: 0;
  top: 0;

  white-space: pre;

  align-items: center;
  display: flex;
  flex-direction: row;

  font-size: 0.8rem;
  padding: 0;
  height: 34px;
}

.react-tabs__tab:not(.react-tabs__tab--button),
.react-tabs__tab--button .tab-button {
  padding: 0 11px;
}

.react-tabs__tab,
.react-tabs__tab svg {
  fill: var(--tab-color);
}

.react-tabs__tab:not(.react-tabs__tab--selected):hover {
  --tab-color: white;
  background-color: var(--theme-editor-background-highlight);
}

.react-tabs__tab:focus {
  box-shadow: none;
  border-color: transparent;
}

.react-tabs__tab--selected {
  --tab-color: white;
  background-color: var(--theme-editor-background);
  user-select: none;
  cursor: default;
}

.react-tabs__tab:focus:after {
  content: none;
}

.simulation-viewer,
.simulation-viewer-tab-panel-container {
  flex-grow: 1;
  overflow: hidden;
  position: relative;
  display: flex;
}

.simulation-viewer .react-tabs__tab-panel {
  flex-grow: 1;
  overflow: auto;
}

.simulation-viewer .react-tabs__tab-panel.RawOutput {
  flex-grow: 0;
  overflow: auto;
}

.react-tiny-popover-container {
  z-index: var(--popover-z);
}

/**
 * Monaco seems to be causing vertical scrollbars for us. We don't really have
 * time to figure out why right now, and we can hide the aria container for now
 * to fix the symptom.
 */
.monaco-aria-container {
  height: 0 !important;
}
