:root {
  --conflict-marker-start-heading-bg: #007365;
  --conflict-marker-start-bg: #123f3a;
  --conflict-marker-divider-bg: transparent;
  --conflict-marker-end-heading-bg: #156092;
  --conflict-marker-end-bg: #1a364c;
  --conflict-label-font: "SF Mono", Monaco, Menlo, Consolas, "Ubuntu Mono",
    "Liberation Mono", "DejaVu Sans Mono", "Courier New", monospace;
}

.HashCoreEditor {
  position: relative;
  width: 100%;
  height: 0;
  display: flex;
  flex-direction: column;
  flex: 1 1 100%;
}

.HashCoreEditor .MonacoContainer {
  /**
   * this is fine because they're part of `.HashCoreEditor` which has
   * `flex-direction: column;` set (so `width` isn't the main axis)
   */
  width: 100%;
}

// Double selector for specificity
.HashCoreEditor__Tabs.react-tabs {
  flex: 1 0 auto;
  height: auto !important;
  max-height: 100%;
}

.HashCoreEditor .react-tabs__tab-panel {
  flex: 1 1 0;
  overflow: hidden;
}

.HashCoreEditor .react-tabs__tab-panel--selected {
  display: flex;
  flex-direction: column;
}

.HashCoreEditor .MonacoContainer {
  background-color: var(--theme-editor-background);
  flex: 1 1 100%;
}

// START CONFLICT MARKERS
.HashCoreEditor__ConflictMarkers__StartHeading {
  background: var(--conflict-marker-start-heading-bg);
}

.HashCoreEditor__ConflictMarkers__Start {
  background: var(--conflict-marker-start-bg);
}
.HashCoreEditor__ConflictMarkers__Divider {
  background: var(--conflict-marker-divider-bg);
}
.HashCoreEditor__ConflictMarkers__EndHeading {
  background: var(--conflict-marker-end-heading-bg);
}
.HashCoreEditor__ConflictMarkers__StartHeading::after,
.HashCoreEditor__ConflictMarkers__EndHeading:after {
  font-size: 0.7rem;
  text-align: right;
  font-family: var(--conflict-label-font);
  height: 18px;
  display: flex;
  align-items: center;
  position: absolute;
  right: 0;
  padding-right: 1rem;
  background: var(--conflict-marker-start-heading-bg);
  z-index: 1;
}
.HashCoreEditor__ConflictMarkers__StartHeading::after {
  content: "(Current change)";
}
.HashCoreEditor__ConflictMarkers__EndHeading::after {
  content: "(Incoming change)";
}
.HashCoreEditor__ConflictMarkers__End {
  background: var(--conflict-marker-end-bg);
}
// END CONFLICT MARKERS
